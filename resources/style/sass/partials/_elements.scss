hr
{
    width: 100%;
    height: 1px;
    border: 0;
    background-color: GET-COLOUR("THEME-L2");
}

img
{
    max-width: 100%;
}

button, input
{
    padding: 0.75em;
    vertical-align: middle;
    background-color: GET-COLOUR("WHITE");
    border: 1px solid GET-COLOUR("THEME");
    outline: none;
}

button:not(.reset-button)
{
    position: relative;
    text-transform: uppercase;
    font-weight: bold;
    font-size: 0.9em;
    transition: background-color $duration-short, color $duration-short;
    cursor: pointer;
    
    &:hover,
    &:focus
    {
        background-color: GET-COLOUR("THEME");
        color: GET-COLOUR("WHITE");
    }
    
    &:disabled
    {
        background-color: GET-COLOUR("THEME-L5");
        
        &.loading
        {
            color: transparent;
            background-repeat: no-repeat;
            background-position: center;
            background-image: url('data:image/svg+xml;utf8,<svg class="lds-rolling" width="25px" height="25px" style="background:none" preserveAspectRatio="xMidYMid" version="1.1" viewBox="0 0 100 100" xmlns="http://www.w3.org/2000/svg"><circle transform="rotate(274.286 50 50)" cx="50" cy="50" r="35" fill="none" stroke="' + GET-COLOUR("THEME") + '" stroke-dasharray="164.93361431346415 56.97787143782138" stroke-width="7" ng-attr-r="{{config.radius}}" ng-attr-stroke="{{config.color}}" ng-attr-stroke-dasharray="{{config.dasharray}}" ng-attr-stroke-width="{{config.width}}"><animateTransform attributeName="transform" begin="0s" calcMode="linear" dur="1.4s" keyTimes="0;1" repeatCount="indefinite" type="rotate" values="0 50 50;360 50 50"/></circle></svg>');
        }
    }
}

button.circle
{
    border-radius: 50%;
}

button.reset-button
{
    background-color: transparent;
    border: 0;
    
    &:hover,
    &:focus
    {
        outline: none;
    }
}

button:disabled,
button:disabled:hover,
button:disabled:focus
{
    background-color: GET-COLOUR("LIGHT-GREY");
    color: GET-COLOUR("DARK-GREY");
}

.text-input-container
{
    max-width: 100%;
    display: table;
    border: 1px solid GET-COLOUR("THEME");
    background-color: GET-COLOUR("WHITE");
    text-align: left;
    overflow: hidden;
    
    input[type=text],
    input[type=password]
    {
        width: 320px;
        max-width: 100%;
        outline: none;
        border: 0;
        border-left: 1px solid GET-COLOUR("THEME-L5");
        
        &:focus
        {
            outline: none;
        }
    }
}

input[type=text],
input[type=password]
{
    outline: 1px solid transparent;
    outline-offset: 0px;
    transition: outline $duration-short;
}

input[type=text]:focus,
input[type=password]:focus
{
    outline: 1px solid GET-COLOUR("THEME");
}

table
{
    width: 100%;
    border-collapse: collapse;
    table-layout: fixed;
    border: 1px solid GET-COLOUR("THEME");
    
    tr
    {
        background-color: GET-COLOUR("LIGHT-GREY");
        
        &:nth-child(even)
        {
            background-color: GET-COLOUR("THEME-L4");
        }
    }
    
    thead th
    {
        padding: 15px 5px;
        font-size: 1.2em;
        font-weight: bold;
        text-align: left;
        background-color: GET-COLOUR("THEME"); 
        color: GET-COLOUR("WHITE");
    }
    
    tbody
    {
        background-color: GET-COLOUR("WHITE");
        
        td
        {
            padding: 10px 5px;
        }
    }
}

blockquote,
.note-theme
{
    padding: 1em 1.5em;
    text-align: left;
    border-left: 5px solid GET-COLOUR("THEME");
    background-color: GET-COLOUR("THEME-L5");
}

blockquote
{
    margin: 1em 0;
    font-style: italic;
    
    footer
    {
        font-style: normal;
        
        &:before
        {
            content: '- ';
        }
    }
}

code.block
{
    margin: 1em 0;
    padding-right: 1em;
    display: block;
    white-space: normal;
    border: 1px solid GET-COLOUR("THEME-L4");
    border-left: 5px solid GET-COLOUR("THEME");
    background-color: GET-COLOUR("WHITE");
    counter-reset: line-number;
    
    p
    {
        counter-increment: line-number;
        margin: 0;
        white-space: pre-wrap;
        
        &:first-child
        {
            padding-top: 1em;
        }
        
        &:last-child
        {
            padding-bottom: 1em;
        }
        
        &:before
        {
            content: counter(line-number);
            height: 100%;
            display: table;
            float: left;
            padding: 0 1em;
            margin-right: 1em;
            border-right: 1px solid GET-COLOUR("THEME-L4");
        }
    }
}

input[type="checkbox"].hidden,
input[type="radio"]
{
    display: none;
}

input[type="checkbox"].hidden + label,
input[type="radio"].hidden + label
{
    width: 1.25em;
    height: 1.25em;
    position: relative;
    display: inline-block;
    vertical-align: middle;
    margin-right: 1em;
    overflow: hidden;
    background-color: GET-COLOUR("WHITE");
    border: 1px solid GET-COLOUR("THEME");
    border-radius: 50%;
    cursor: pointer;
    transition: border-width $duration-mid;
}

input[type="checkbox"].hidden:checked + label,
input[type="radio"].hidden:checked + label
{
    border-width: 0.625em;
}

.info-message
{
    min-height: 2em;
}